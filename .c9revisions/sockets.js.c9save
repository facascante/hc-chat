{"ts":1362352917907,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1362355428688,"patch":[[{"diffs":[[1,"var parent = module.parent.exports\n  , app = parent.app\n  , server = parent.server\n  , cient = parent.client\n  , sessionStore = parent.sessionStore\n  , sio = require('socket.io')\n  , cookieParser = require(\"connect\").utils.parseSignedCookies\n  , cookie = require(\"cookie\");\n  \nvar io = sio.listen(server);\n\nio.set('authorization', function (hsData, accept) {\n  if(hsData.headers.cookie) {\n    var cookies = cookieParser(cookie.parse(hsData.headers.cookie), \"hatchcatch\")\n      , sid = cookies['balloons'];\n\n    sessionStore.load(sid, function(err, session) {\n      if(err || !session) {\n        return accept('Error retrieving session!', false);\n      }\n\n      hsData.hatchcatch = {\n        user: session.passport.user,\n        room: /\\/(?:([^\\/]+?))\\/?$/g.exec(hsData.headers.referer)[1]\n      };\n\n      return accept(null, true);\n      \n    });\n  } else {\n    return accept('No cookie transmitted.', false);\n  }\n});"]],"start1":0,"start2":0,"length1":0,"length2":917}]],"length":917,"saved":false}
{"ts":1362355478499,"patch":[[{"diffs":[[0,"\n  }\n});"],[1,"\n\nio.configure(function() {\n  io.set('store', new sio.RedisStore({client: client}));\n  io.enable('browser client minification');\n  io.enable('browser client gzip');\n});"]],"start1":909,"start2":909,"length1":8,"length2":176}]],"length":1085,"saved":false}
{"ts":1362355771825,"patch":[[{"diffs":[[0,"er\n  , c"],[1,"l"],[0,"ient = p"]],"start1":80,"start2":80,"length1":16,"length2":17},{"diffs":[[0," gzip');\n});"],[1,"\n\nio.sockets.on('connection', function (socket) {\n  var hs = socket.handshake\n    , nickname = hs.hatchcatch.user.username\n    , provider = hs.hatchcatch.user.provider\n    , userKey = provider + \":\" + nickname\n    , room_id = hs.hatchcatch.room;\n\n  socket.join(room_id);\n  \n  socket.on('im', function(data) {\n    var no_empty = data.msg.replace(\"\\n\",\"\");\n    if(no_empty.length > 0) {      \n      io.sockets.in(room_id).emit('om', {\n        nickname: nickname,\n        provider: provider,\n        msg: data.msg\n      });        \n    }   \n  });\n\n  socket.on('disconnect', function() {\n    \n  });\n});\n"]],"start1":1074,"start2":1074,"length1":12,"length2":611}]],"length":1685,"saved":false}
{"ts":1362356017543,"patch":[[{"diffs":[[0,"e\n    , "],[-1,"nick"],[1,"user"],[0,"name = h"]],"start1":1162,"start2":1162,"length1":20,"length2":20},{"diffs":[[0,"  , "],[-1,"userKey = provider + \":\" + nickname"],[1,"codename = hs.hatchcatch.user.codename\n    , gender = hs.hatchcatch.user.gender"],[0,"\n   "]],"start1":1256,"start2":1256,"length1":43,"length2":87},{"diffs":[[0,"  , room"],[-1,"_id"],[0," = hs.ha"]],"start1":1342,"start2":1342,"length1":19,"length2":16},{"diffs":[[0,"oin(room"],[-1,"_id"],[0,");\n  \n  "]],"start1":1384,"start2":1384,"length1":19,"length2":16},{"diffs":[[0,"room"],[-1,"_id"],[0,").em"]],"start1":1535,"start2":1535,"length1":11,"length2":8},{"diffs":[[0,"    "],[-1,"nick"],[1,"username: username,\n        gender: gender,\n        code"],[0,"name: "],[-1,"nick"],[1,"code"],[0,"name"]],"start1":1558,"start2":1558,"length1":22,"length2":74}]],"length":1772,"saved":false}
{"ts":1362357254774,"patch":[[{"diffs":[[0,"on('"],[-1,"i"],[0,"m"],[1,"y msg"],[0,"', f"]],"start1":1407,"start2":1407,"length1":10,"length2":14},{"diffs":[[0,").emit('"],[-1,"om"],[1,"new msg"],[0,"', {\n   "]],"start1":1543,"start2":1543,"length1":18,"length2":23}]],"length":1781,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362829427294,"patch":[[{"diffs":[[0,"rts\n"],[-1,"  , app = parent.app\n"],[0,"  , "]],"start1":31,"start2":31,"length1":29,"length2":8},{"diffs":[[0,".client\n"],[1,"  , model = require(\"./client\")\n"],[0,"  , sess"]],"start1":81,"start2":81,"length1":16,"length2":48},{"diffs":[[0,"user"],[-1,",\n        room: /\\/(?:([^\\/]+?))\\/?$/g.exec(hsData.headers.referer)[1]"],[0,""],[1,""],[0,"\n   "]],"start1":726,"start2":726,"length1":78,"length2":8},{"diffs":[[0,"andshake"],[1,".hatchcatch.user"],[0,"\n    , u"]],"start1":1096,"start2":1096,"length1":16,"length2":32},{"diffs":[[0,"me = hs."],[-1,"hatchcatch.user."],[0,"username"]],"start1":1133,"start2":1133,"length1":32,"length2":16},{"diffs":[[0,"er = hs."],[-1,"hatchcatch.user."],[0,"provider"]],"start1":1162,"start2":1162,"length1":32,"length2":16},{"diffs":[[0,"me = hs."],[-1,"hatchcatch.user."],[0,"codename"]],"start1":1191,"start2":1191,"length1":32,"length2":16},{"diffs":[[0," hs."],[-1,"hatchcatch.user."],[0,"gend"]],"start1":1222,"start2":1222,"length1":24,"length2":8},{"diffs":[[0,"r\n  "],[1,"\n"],[0,"  "],[-1,", room = hs.hatchcatch.room;\n\n"],[1,"model.getRoom(client,gender,function(err,room){\n      if(room){\n        "],[0,"  so"]],"start1":1231,"start2":1231,"length1":40,"length2":83},{"diffs":[[0,"oom);\n  "],[-1,"\n"],[1,"        \n        "],[0,"  socket"]],"start1":1325,"start2":1325,"length1":17,"length2":33},{"diffs":[[0,"ion(data) {\n"],[1,"        "],[0,"    var no_e"]],"start1":1377,"start2":1377,"length1":24,"length2":32},{"diffs":[[0,"n\",\"\");\n"],[1,"        "],[0,"    if(n"]],"start1":1435,"start2":1435,"length1":16,"length2":24},{"diffs":[[0," 0) {      \n"],[1,"        "],[0,"      io.soc"]],"start1":1475,"start2":1475,"length1":24,"length2":32},{"diffs":[[0,", {\n        "],[1,"      "],[1,"  "],[0,"username: us"]],"start1":1535,"start2":1535,"length1":24,"length2":32},{"diffs":[[0,"        "],[1,"     "],[1,"   "],[0,"gender: "]],"start1":1575,"start2":1575,"length1":16,"length2":24},{"diffs":[[0,"        "],[1,"   "],[1,"     "],[0,"codename"]],"start1":1607,"start2":1607,"length1":16,"length2":24},{"diffs":[[0,"        "],[1,"  "],[1,"      "],[0,"provider"]],"start1":1643,"start2":1643,"length1":16,"length2":24},{"diffs":[[0,"        "],[1," "],[1,"       "],[0,"msg: dat"]],"start1":1679,"start2":1679,"length1":16,"length2":24},{"diffs":[[0,"ata.msg\n"],[1,"        "],[0,"      })"]],"start1":1701,"start2":1701,"length1":16,"length2":24},{"diffs":[[0,"    "],[-1,"}   \n  });\n\n  socket.on('disconnect', function() {\n    \n  });"],[1,"        }   \n          });\n         \n          \n          socket.on('disconnect', function() {\n            \n          });\n      }\n      else{\n          console.log(\"ERROR: Unable to alocate room!\");\n          console.log(err);\n      }\n  });\n  \n  \n  "],[0,"\n});"]],"start1":1735,"start2":1735,"length1":69,"length2":257}]],"length":1993,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362833964212,"patch":[[{"diffs":[[0,"n(room);"],[1," "],[0,"\n       "]],"start1":1322,"start2":1322,"length1":16,"length2":17},{"diffs":[[0,"om); \n          "],[1,"model.addVisitor(client,room,hs);"],[0,"\n          socke"]],"start1":1326,"start2":1326,"length1":32,"length2":65}]],"length":2027,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362845841277,"patch":[[{"diffs":[[0,"(client,"],[-1,"gender"],[1,"hs"],[0,",functio"]],"start1":1251,"start2":1251,"length1":22,"length2":18},{"diffs":[[0,"oin(room"],[1,".no"],[0,"); \n    "]],"start1":1316,"start2":1316,"length1":16,"length2":19},{"diffs":[[0,"om,hs);\n"],[1,"          \n          roomList(client,function(err,rooms){\n              if(rooms){    \n                  rooms = JSON.stringify(rooms);\n                  rooms.forEach(function(room){\n                      io.sockets.in(room.no).emit('new msg', {\n                        \n                      }); \n                  });\n              }\n          });\n"],[0,"        "]],"start1":1367,"start2":1367,"length1":16,"length2":367},{"diffs":[[0,"  \n          });"],[-1,""],[0,""],[1,"\n          "],[0,"\n         \n     "]],"start1":2133,"start2":2133,"length1":32,"length2":43}]],"length":2388,"saved":false}
{"ts":1362845883925,"patch":[[{"diffs":[[0,"(room.no).emit('"],[-1,"new msg"],[1,"chatmate"],[0,"', {\n           "]],"start1":1594,"start2":1594,"length1":39,"length2":40}]],"length":2389,"saved":false}
{"ts":1362846001211,"patch":[[{"diffs":[[0,"e', "],[-1,"{\n                        \n                      }"],[1,"rooms"],[0,"); \n"]],"start1":1617,"start2":1617,"length1":58,"length2":13}]],"length":2344,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362857575144,"patch":[[{"diffs":[[0," \n          "],[1,"model."],[0,"roomList(cli"]],"start1":1384,"start2":1384,"length1":24,"length2":30},{"diffs":[[0,") {\n            "],[1,"model.removeVisitor(client,room,hs);"],[0,"\n          });\n "]],"start1":2187,"start2":2187,"length1":32,"length2":68}]],"length":2386,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362860911769,"patch":[[{"diffs":[[0,"et.io')\n"],[1,"  , redis = require(\"redis\")\n"],[0,"  , cook"]],"start1":183,"start2":183,"length1":16,"length2":45},{"diffs":[[0,"sStore({"],[-1,"c"],[1,"redis: redis, redisPub: client,redisSub: client,redisC"],[0,"lient: c"]],"start1":946,"start2":946,"length1":17,"length2":70}]],"length":2468,"saved":false}
{"ts":1362861150356,"patch":[[{"diffs":[[0,".client\n"],[1,"  , pub = parent.pub\n  , sub = parent.sub\n"],[0,"  , mode"]],"start1":81,"start2":81,"length1":16,"length2":58},{"diffs":[[0,", redisPub: "],[-1,"client"],[1,"pub"],[0,",redisSub: c"]],"start1":1008,"start2":1008,"length1":30,"length2":27},{"diffs":[[0,"disSub: "],[-1,"client"],[1,"sub"],[0,",redisCl"]],"start1":1026,"start2":1026,"length1":22,"length2":19}]],"length":2504,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362873659664,"patch":[[{"diffs":[[0,"es['"],[-1,"balloons"],[1,"hatchcatch"],[0,"'];\n"]],"start1":573,"start2":573,"length1":16,"length2":18}]],"length":2506,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362878052259,"patch":[[{"diffs":[[0,"   \n"],[-1,"                  rooms = JSON.stringify(rooms);\n"],[0,"    "]],"start1":1584,"start2":1584,"length1":57,"length2":8},{"diffs":[[0,"    "],[-1,"\n         \n        "],[0,"  \n "]],"start1":2189,"start2":2189,"length1":27,"length2":8}]],"length":2438,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362878677659,"patch":[[{"diffs":[[0,"ender\n  "],[1,"var user = {username: hs.username,provider: hs.provider, codename: hs.codename, gender: hs.gender, profileUrl: hs.profileUrl};"],[0,"\n  model"]],"start1":1347,"start2":1347,"length1":16,"length2":142},{"diffs":[[0,"tor(client,room,"],[-1,"hs"],[1,"user"],[0,");\n          \n  "]],"start1":1600,"start2":1600,"length1":34,"length2":36},{"diffs":[[0,"nt,room,"],[-1,"hs"],[1,"user"],[0,");\n     "]],"start1":2407,"start2":2407,"length1":18,"length2":20}]],"length":2568,"saved":false}
